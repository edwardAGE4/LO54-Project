<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!-- Enables the Spring MVC @Controller programming model -->
    <context:component-scan base-package="com.miabegroup.gformation.controller" />
    <!--   <mvc:resources mapping="/resources/**" location="/resources/" />-->
    <mvc:resources mapping="/resources/**" location="/resources/theme/" />
   
    <mvc:annotation-driven />
   
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
    up static resources in the ${webappRoot}/resources directory -->
    <!--	<resources mapping="/resources/**" location="/resources/" />-->
    <!--    <bean name="CoursesController" class="com.miabegroup.gformation.modules" >
  <property name="dataSource" ref="dataSource"/>
    </bean>-->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="ISO-8859-1" />
    </bean>
    
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/views/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>
    <mvc:view-controller path="/" view-name="show_sessions_clients"/>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/school_db" />
        <property name="username" value="root" />
        <property name="password" value="" />
    </bean>
    <!-- Hibernate 4 SessionFactory Bean definition -->
    <bean id="hibernate4AnnotatedSessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <value>com.miabegroup.gformation.entity.Location</value>
                <value>com.miabegroup.gformation.entity.Course</value>
                <value>com.miabegroup.gformation.entity.Course_Session</value>
                 <value>com.miabegroup.gformation.entity.Client</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <!--            <property name="hibernate.hbm2ddl.auto">create</property>-->
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
                </prop>
                <prop key="hibernate.show_sql">true</prop>
<!--             <prop key="hibernate.hbm2ddl.auto">create</prop>-->
            </props>
        </property>
    </bean>
    <!-- DEBUT LOCATION MODULE -->
    
    <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="locationsDao" class="com.miabegroup.gformation.dao.LocationsDaoImplementation">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    <bean id="locationsService" class="com.miabegroup.gformation.services.LocationsServiceImplematation">
        <property name="locationsDao" ref="locationsDao"/>
    </bean>
   
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    
    
    <!-- DEBUT COURSE MODULE -->
    
    <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="coursesDao" class="com.miabegroup.gformation.dao.CourseDaoImplementation">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    <bean id="courseService" class="com.miabegroup.gformation.services.CourseServiceImplementation">
        <property name="coursesDao" ref="coursesDao"/>
    </bean>
   
    <bean id="transactionManagers" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    
    <!-- DEBUT COURSE SESSION MODULE -->
    
     <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="courseSessionDao" class="com.miabegroup.gformation.dao.CourseSessionDaoImplementation">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    <bean id="courseSessionService" class="com.miabegroup.gformation.services.CourseSessionServiceImplementation">
        <property name="courseSessionDao" ref="courseSessionDao"/>
    </bean>
   
    <bean id="transactionMan" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    
    <!-- DEBUT CLIENT MODULE -->
    
    <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="clientDao" class="com.miabegroup.gformation.dao.ClientDaoImplementation">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
    <bean id="clientService" class="com.miabegroup.gformation.services.ClientServiceImplementation">
        <property name="clientDao" ref="clientDao"/>
    </bean>
   
    <bean id="transactionManc" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </bean>
</beans>